 
*** Test Cases ***
Win Diagonally as X
    Start New Game
    Mark Location       1   1
    Location Should Be  1   1   X
    Mark Location       0   1
    Location Should Be  0   1   O
    Mark Location       0   0
    Location Should Be  0   0   X
    Mark Location       0   2
    Location Should Be  0   2   O
    Mark Location       2   2
    Location Should Be  2   2   X
    Winner Should Be    X

Win Horizontally as O
    Start New Game
    Mark Location       1   1
    Location Should Be  1   1   X
    Mark Location       2   0
    Location Should Be  2   0   O
    Mark Location       0   0
    Location Should Be  0   0   X
    Mark Location       2   2
    Location Should Be  2   2   O
    Mark Location       0   2
    Location Should Be  0   2   X
    Mark Location       2   1
    Location Should Be  2   1   O
    Winner Should Be    O

Force a Tie
    Start New Game
    Mark Location       1   1
    Location Should Be  1   1   X
    Mark Location       0   0
    Location Should Be  0   0   O
    Mark Location       2   0
    Location Should Be  2   0   X
    Mark Location       0   2
    Location Should Be  0   2   O
    Mark Location       0   1
    Location Should Be  0   1   X
    Mark Location       2   1
    Location Should Be  2   1   O
    Mark Location       1   2
    Location Should Be  1   2   X
    Mark Location       1   0
    Location Should Be  1   0   O
    Mark Location       2   2
    Location Should Be  2   2   X
    Winner Should Be    TIE

package tictactoe;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class tictactoe extends JFrame{
	private JButton[] anniu = new JButton[9];
	
	public tictactoe(){
		super("Tic Tac Toe");
		this.setLayout(new BoxLayout(this.getContentPane(), BoxLayout.PAGE_AXIS));
		this.add(label);
		JPanel panel = new JPanel();
		GridLayout layout = new GridLayout(3, 3);
		layout.setHgap(3);
		layout.setVgap(3);
		
			private ImageIcon cross = new ImageIcon("image/x.gif");
			private ImageIcon not = new ImageIcon("image/o.gif");

			public TicTacToe() {
				setLayout(new GridLayout(3, 3));

				for (int i = 0; i < 9; i++) {
				int mode = (int) (Math.random() * 3.0);
				if (mode == 0)
					add(new JLabel(this.cross));
				else if (mode == 1)
					add(new JLabel(this.not));
				else
					add(new JLabel());
    }
}

public static void main(String[] args) {
    TicTacToe frame = new TicTacToe();
    frame.setTitle("TicTacToe");
    frame.setSize(200, 200);
    frame.setLocationRelativeTo(null);
    frame.setDefaultCloseOperation(3);
    frame.setVisible(true);
  }
}
		
		this.add(panel);
		for(int i = 0;i < anniu.length;i++){
			anniu[i] = new JButton("");
			anniu[i].addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent ae) {
						gameButtonClicked(ae);
							  public void actionPerformed(ActionEvent e) {
						Object clicked = e.getSource();
						int turns = 1;
						for (int p = 0; p < 9; p++)
						{
							if(clicked == gameButton[countTurns] && turns < 10)
							{
								if (!(turns % 2 == 0))
								{
									((JButton)e.getSource()).setText("X");
									turns++;
								}
								else
								{
									((JButton)e.getSource()).setText("O");
									turns++;
								}
							}
						}
					}
				}
			});
			
			anniu[i].setPreferredSize(new Dimension(100, 100));
			
			panel.add(anniu[i]);
		}
	}
	public static void main(String[] args) {
		tictactoe game = new tictactoe();
	
				 final int integerHack = i; 

					clearButtons.addActionListener(new ActionListener(){
						@Override
						public void actionPerformed(ActionEvent e) {
							gameButton[integerHack].setText("");
						}
					});
				}
				JButton exit = new JButton("Exit");
				exit.setActionCommand("EXIT");
				exit.addActionListener(new ActionListener(){
					@Override
					public void actionPerformed(ActionEvent e) {
						String cmd = e.getActionCommand();
						if (cmd == "EXIT")
						{
							System.exit(FRAME_WIDTH);
						}
					}
				});

				JPanel rightPanel = new JPanel();
				JLabel wonLabel = new JLabel();
				rightPanel.setLayout(new GridLayout(1, 3));
				rightPanel.add(wonLabel);
				rightPanel.add(clearButtons);
				rightPanel.add(exit);
				JFrame mainFrame = new JFrame();
				mainFrame.setSize(FRAME_WIDTH, FRAME_HEIGHT);
				mainFrame.setVisible(true);
				mainFrame.setLayout(new GridLayout(1,2));
				mainFrame.add(ticTacToeBoard);
				mainFrame.add(rightPanel);
				mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
}
